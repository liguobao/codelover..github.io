<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>codelover&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://codelover.link/"/>
  <updated>2016-04-23T13:59:16.810Z</updated>
  <id>http://codelover.link/</id>
  
  <author>
    <name>李国宝</name>
    <email>codelover@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mono webreques https exception</title>
    <link href="http://codelover.link/2016/04/23/mono-webreques-https-exception/"/>
    <id>http://codelover.link/2016/04/23/mono-webreques-https-exception/</id>
    <published>2016-04-23T13:59:16.810Z</published>
    <updated>2016-04-23T13:59:16.810Z</updated>
    
    <content type="html">&lt;p&gt;前几天在做一个使用URL通过WebRequest请求HTML页面的功能的时候遇到了点坑，程序在开发环境没有任何的问题，部署到linux mono上之后就跪了。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GetHTML&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; url&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; htmlCode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        HttpWebRequest webRequest = (System.Net.HttpWebRequest)System.Net.WebRequest.Create(url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        webRequest.Timeout = &lt;span class=&quot;number&quot;&gt;30000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        webRequest.Method = &lt;span class=&quot;string&quot;&gt;&quot;GET&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        webRequest.UserAgent = &lt;span class=&quot;string&quot;&gt;&quot;Mozilla/4.0&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        webRequest.Headers.Add(&lt;span class=&quot;string&quot;&gt;&quot;Accept-Encoding&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;gzip, deflate&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        HttpWebResponse webResponse = (System.Net.HttpWebResponse)webRequest.GetResponse();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//获取目标网站的编码格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; contentype = webResponse.Headers[&lt;span class=&quot;string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Regex regex = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Regex(&lt;span class=&quot;string&quot;&gt;&quot;charset\\s*=\\s*[\\W]?\\s*([\\w-]+)&quot;&lt;/span&gt;, RegexOptions.IgnoreCase);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (webResponse.ContentEncoding.ToLower() == &lt;span class=&quot;string&quot;&gt;&quot;gzip&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//如果使用了GZip则先解压&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; (System.IO.Stream streamReceive = webResponse.GetResponseStream())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; zipStream = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; System.IO.Compression.GZipStream(streamReceive, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                System.IO.Compression.CompressionMode.Decompress))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//匹配编码格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (regex.IsMatch(contentype))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        Encoding ending = Encoding.GetEncoding(regex.Match(contentype).Groups[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].Value.Trim());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; (StreamReader sr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; System.IO.StreamReader(zipStream, ending))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            htmlCode = sr.ReadToEnd();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; (StreamReader sr = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; System.IO.StreamReader(zipStream, Encoding.UTF8))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            htmlCode = sr.ReadToEnd();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; (System.IO.Stream streamReceive = webResponse.GetResponseStream())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; (System.IO.StreamReader sr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; System.IO.StreamReader(streamReceive, Encoding.Default))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    htmlCode = sr.ReadToEnd();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; htmlCode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(Exception ex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LogHelper.WriteException(&lt;span class=&quot;string&quot;&gt;&quot;GetHTML&quot;&lt;/span&gt;, ex, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &amp;#123; Url = url &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;开发环境在Windows10 + VS2013,整个代码跑起来没什么问题。&lt;/p&gt;
&lt;p&gt;无论是HTTP还是HTTPS协议，网页HTML一样能获取得到。&lt;/p&gt;
&lt;p&gt;网站部署到linux Jexus之后HTTP协议的网站同样可以获取到HTML，遇到HTTPS协议的网站的时候就跪了。&lt;/p&gt;
&lt;p&gt;抓到的异常信息如下：&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;System.Net.WebException: Error: TrustFailure (The authentication or decryption has failed.) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&amp;gt; System.IO.IOException: The authentication or decryption has failed.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&amp;gt; System.IO.IOException: The authentication or decryption has failed. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&amp;gt; Mono.Security.Protocol.Tls.TlsException:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Invalid certificate received &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; server. Error code: &lt;span class=&quot;number&quot;&gt;0xffffffff800b0109&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at Mono.Security.Protocol.Tls.RecordProtocol.EndReceiveRecord &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(IAsyncResult asyncResult) &amp;lt;&lt;span class=&quot;number&quot;&gt;0x41b58d80&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;0x0013e&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;filename unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at Mono.Security.Protocol.Tls.SslClientStream.SafeEndReceiveRecord&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(IAsyncResult ar, Boolean ignoreEmpty) &amp;lt;&lt;span class=&quot;number&quot;&gt;0x41b58cb0&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;0x00031&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;filename unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at Mono.Security.Protocol.Tls.SslClientStream.NegotiateAsyncWorker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(IAsyncResult result) &amp;lt;&lt;span class=&quot;number&quot;&gt;0x41b72a40&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;0x0023f&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;filename unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--- End of inner exception stack trace ---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at Mono.Security.Protocol.Tls.SslClientStream.EndNegotiateHandshake &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(IAsyncResult result) &amp;lt;&lt;span class=&quot;number&quot;&gt;0x41ba07e0&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;0x000f3&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;filename unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at Mono.Security.Protocol.Tls.SslStreamBase.AsyncHandshakeCallback &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(IAsyncResult asyncResult) &amp;lt;&lt;span class=&quot;number&quot;&gt;0x41ba0540&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;0x00086&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;filename unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--- End of inner exception stack trace ---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at Mono.Security.Protocol.Tls.SslStreamBase.EndRead &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(IAsyncResult asyncResult) &amp;lt;&lt;span class=&quot;number&quot;&gt;0x41b73fd0&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;0x00199&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;filename unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at Mono.Net.Security.Private.LegacySslStream.EndAuthenticateAsClient &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(IAsyncResult asyncResult) &amp;lt;&lt;span class=&quot;number&quot;&gt;0x41b73f30&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;0x00042&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;filename unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at Mono.Net.Security.Private.LegacySslStream.AuthenticateAsClient (System.String targetHost, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.Security.Cryptography.X509Certificates.X509CertificateCollection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clientCertificates, SslProtocols enabledSslProtocols,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Boolean checkCertificateRevocation) &amp;lt;&lt;span class=&quot;number&quot;&gt;0x41b6a660&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;0x00055&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;filename unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at Mono.Net.Security.MonoTlsStream.CreateStream (System.Byte[] buffer) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;number&quot;&gt;0x41b69c30&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;0x00159&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;filename unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--- End of inner exception stack trace ---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at System.Net.HttpWebRequest.EndGetResponse (IAsyncResult asyncResult) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;number&quot;&gt;0x41b67660&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;0x001f9&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;filename unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at System.Net.HttpWebRequest.GetResponse () &amp;lt;&lt;span class=&quot;number&quot;&gt;0x41b60920&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;0x0005a&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;filename unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;at WebBookmarkUI.Commom.HTTPHelper.GetHTML (System.String url) &amp;lt;&lt;span class=&quot;number&quot;&gt;0x41b59b70&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;0x00235&lt;/span&gt;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;filename unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有用的信息基本就是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Invalid certificate received from server&lt;/li&gt;
&lt;li&gt;The authentication or decryption has failed&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一开始百思不得其解，为嘛好好的程序在开发环境跑得都好的，到了mono上就挂了，多疑的我还以为是mono的bug。&lt;br&gt;今天静下心来去找了一下资料，发现Mono的文档有这个问题的描述，认真读了一遍，又去请教了一番宇内流云大大，终于弄懂了是什么回事。&lt;/p&gt;
&lt;p&gt;先贴一下相关资料：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/4926676/mono-webrequest-fails-with-https&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow mono-webrequest-fails-with-https&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.mono-project.com/docs/faq/security/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mono doc security&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个问题是出现的原因是Windows自带了HTPPS的根证书，linux默认则是没有带有根证书的。我们的mono在调用WebRequest去请求HTTPS协议的网站的时候，找不到任何有效的根证书，所以抛出上面的异常了。&lt;/p&gt;
&lt;p&gt;解决方案也很简单，为linux导入一下HTTPS根证书就好。&lt;/p&gt;
&lt;p&gt;在linux服务器上面执行下面这条命令。&lt;br&gt;&lt;figure class=&quot;highlight brainfuck&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;mozroots&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;ask&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;machine&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在网站的Application_Start()里面添加下面代码：&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; System.Net.ServicePointManager.ServerCertificateValidationCallback +=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;delegate&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; sender, System.Security.Cryptography.X509Certificates.X509Certificate certificate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; System.Security.Cryptography.X509Certificates.X509Chain chain,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; System.Net.Security.SslPolicyErrors sslPolicyErrors)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// **** Always accept&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;完事。&lt;/p&gt;
&lt;p&gt;这个故事告诉我们，linux干活都是要亲力亲为呀。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;前几天在做一个使用URL通过WebRequest请求HTML页面的功能的时候遇到了点坑，程序在开发环境没有任何的问题，部署到linux mono上之后就跪了。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
    
    </summary>
    
      <category term=".net" scheme="http://codelover.link/categories/net/"/>
    
    
  </entry>
  
  <entry>
    <title>Jexus支持HTTPS协议</title>
    <link href="http://codelover.link/2016/04/23/Jexus%E6%94%AF%E6%8C%81HTTPS%E5%8D%8F%E8%AE%AE/"/>
    <id>http://codelover.link/2016/04/23/Jexus支持HTTPS协议/</id>
    <published>2016-04-23T13:58:57.937Z</published>
    <updated>2016-04-23T13:58:57.937Z</updated>
    
    <content type="html">&lt;p&gt;众所周知，在HTTPS页面请求HTTP资料的时候，现代浏览器会拦截，提示用户是否继续，或者直接拦截，提示都不出来。&lt;/p&gt;
&lt;p&gt;最近给自己做了个快速书签工具，点击书签就直接把书签发送到服务器地址，然后保存到我的网站中。&lt;/p&gt;
&lt;p&gt;一开始一切都挺正常的，不过遇到了https的网站的时候，就跪掉了。&lt;/p&gt;
&lt;p&gt;开始的时候看到HTTPS证书是收费的，想想还是算了，反正凑合能用就是。前几天偶尔看到有一个免费申请HTTPS的开源软件，喵了一下看起来还不错，这几天有空了立马开干。下面有一个教程，我申请证书差不多就是按照这个来处理的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.paulyang.cn/blog/archives/39?spm=5176.blog2666.yqblogcon1.12.Nu0TgL&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用Let’s Encrypt获取免费证书&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于这个Let’s Encrypt，维基百科是这样介绍的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let’s Encrypt 是一个将于2015年末推出的数字证书认证机构，将通过旨在消除当前手动创建和安装证书的复杂过程的自动化流程，为安全网站提供免费的SSL/TLS证书。  Let’s Encrypt 是由互联网安全研究小组（ISRG，一个公益组织）提供的服务。主要赞助商包括电子前哨基金会，Mozilla基金会，Akamai以及思科。2015年4月9日，ISRG与Linux基金会宣布合作。用以实现这一新的数字证书认证机构的协议被称为自动证书管理环境（ACME）。  GitHub上有这一规范的草案，且提案的一个版本已作为一个Internet草案发布。Let’s Encrypt 宣称这一过程将十分简单、自动化并且免费。  2015年8月7日，该服务更新其推出计划，预计将在2015年9月7日当周某时发布首个证书，随后向列入白名单的域名发行少量证书并逐渐扩大发行。若一切按计划进行，该服务预计将在2015年11月16日当周某时全面开始提供.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;整个项目在Github有代码，主要是通过客户端来为我们的网站生成https证书。&lt;br&gt;首先我们先下载客户端，如下：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/letsencrypt/letsencrypt.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接着进入这个仓库内，执行下面代码：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./letsencrypt-auto certonly -a &amp;#10;webroot\ --webroot-path &amp;#32593;&amp;#31449;&amp;#25152;&amp;#22312;&amp;#36335;&amp;#24452;(&amp;#22914;&amp;#65306;/var/www/web/) \ &amp;#10;-d &amp;#20320;&amp;#30340;&amp;#22495;&amp;#21517;(&amp;#22914;&amp;#65306;test.online) -d www.&amp;#20320;&amp;#30340;&amp;#22495;&amp;#21517;(&amp;#22914;ww.test.online)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里需要注意的事，我这里为了排版，给上面的命令加了换行，运行这个命令的时候记得把换行符去掉。&lt;br&gt;换行符在webroot、-d 前面各有一个。&lt;/p&gt;
&lt;p&gt;一切顺利的话，我们在&lt;code&gt;/etc/letsencrypt/live/域名/&lt;/code&gt;这个目录下能看到四个文件，分别是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;域名证书文件&lt;/li&gt;
&lt;li&gt;签发域名证书的证书链文件&lt;/li&gt;
&lt;li&gt;域名证书+证书链文件&lt;/li&gt;
&lt;li&gt;私钥文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如下图：&lt;br&gt;&lt;img src=&quot;http://7xread.com1.z0.glb.clouddn.com/60e4f29a-6da5-40e1-ae32-453a3bbf2455&quot; alt=&quot;letsencrypt文件&quot;&gt;&lt;/p&gt;
&lt;p&gt;接着就是为网站设置证书了。&lt;/p&gt;
&lt;p&gt;Jexus设置HTTPS要更改jws.conf文档以及网站的配置文档。&lt;/p&gt;
&lt;p&gt;操作步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;修改jws.conf&lt;br&gt;进入Jexus文件夹中，打开 “jws.conf”，添加下面两句：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CertificateFile    = /etc/letsencrypt/live/&amp;#22495;&amp;#21517;/fullchain.pem&amp;#10;CertificateKeyFile = /etc/letsencrypt/live/&amp;#22495;&amp;#21517;/privkey.pem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改之后效果图如下：&lt;br&gt;&lt;img src=&quot;http://7xread.com1.z0.glb.clouddn.com/d306d9c5-6391-421d-86fc-053b97d1b489&quot; alt=&quot;图片描述&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开启网站的HTTPS功能&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;进入siteconf/文件夹，找到对应的网站conf文件，&lt;/p&gt;
&lt;p&gt;把网站服务端口改为443：&lt;br&gt;port=443&lt;/p&gt;
&lt;p&gt;启用https：&lt;br&gt;UseHttps=true&lt;/p&gt;
&lt;p&gt;修改之后的效果图如下：&lt;br&gt;&lt;img src=&quot;http://7xread.com1.z0.glb.clouddn.com/0800dc87-2500-42d2-a3c5-a75a2c819330&quot; alt=&quot;图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后重启jexus即可。&lt;/p&gt;
&lt;p&gt;完了之后，通过HTTPS即可访问。&lt;/p&gt;
&lt;p&gt;最后上一个HTTPS证书的图证明一下这个是可行的。&lt;br&gt;&lt;img src=&quot;http://7xread.com1.z0.glb.clouddn.com/24842774-311e-4e55-a6b5-b88a89edc754&quot; alt=&quot;图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;撒花，下次再见。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;众所周知，在HTTPS页面请求HTTP资料的时候，现代浏览器会拦截，提示用户是否继续，或者直接拦截，提示都不出来。&lt;/p&gt;
&lt;p&gt;最近给自己做了个快速书签工具，点击书签就直接把书签发送到服务器地址，然后保存到我的网站中。&lt;/p&gt;
&lt;p&gt;一开始一切都挺正常的，不过遇到了htt
    
    </summary>
    
      <category term="jexus" scheme="http://codelover.link/categories/jexus/"/>
    
    
  </entry>
  
  <entry>
    <title>ubuntu使用Jexus搭建MyWebSQL</title>
    <link href="http://codelover.link/2016/04/23/ubuntu%E4%BD%BF%E7%94%A8jexus%E6%90%AD%E5%BB%BAmywebsql/"/>
    <id>http://codelover.link/2016/04/23/ubuntu使用jexus搭建mywebsql/</id>
    <published>2016-04-23T13:58:46.283Z</published>
    <updated>2016-04-23T13:58:46.283Z</updated>
    
    <content type="html">&lt;p&gt;之前在阿里云上装了一个ubuntu，后来也没怎么用力，就挂这一个mysql数据库。最近在家里用MySQL Workbench 连接阿里云上面的MySQL的时候，连着过了一会就中断了。后来看了一圈回来才发现，目测是家里电信宽带的锅，不断给我动态分配IP地址….后来群里面的小伙伴说，搭个websql了事啦。听起来不错的想法，于是昨天就试了一下。&lt;/p&gt;
&lt;p&gt;之前在ubuntu上装过apache，后来为了跑asp.net，把apache停了，换成了jexus。&lt;br&gt;Jexus是国内.NET 跨平台大牛们写的一个web服务器，使用方便，很稳定，也在不断加入新特性。相关资料直接访问&lt;a href=&quot;http://www.jexus.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;www.jexus.org&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;jexus是以mono为基础的，其实首先应该先配置mono的运行环境。&lt;/p&gt;
&lt;p&gt;###第一步 安装mono&lt;br&gt;相关资料链接：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.linuxdot.net/bbsfile-3090&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在Ubuntu操作系统上安装mono的具体方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.isvee.com/archives/763&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ubuntu 14.04 安装 Mono&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我的ubuntu老早之前就安装好了mono，这个就此瞥过咯。&lt;/p&gt;
&lt;p&gt;###第二步 安装jexus&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.linuxdot.net/bbsfile-3084&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jexus web server V5.1 安装配置要点&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jexus.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jexus首页&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;A、安装：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd /tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget linuxdot.net/down/jexus-&lt;span class=&quot;number&quot;&gt;5.8&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;.tar.gz &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -zxvf jexus-&lt;span class=&quot;number&quot;&gt;5.8&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;.tar.gz &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd jexus-&lt;span class=&quot;number&quot;&gt;5.8&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ./install &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B、更新&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd /tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo /usr/jexus/jws stop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget linuxdot.net/down/jexus-&lt;span class=&quot;number&quot;&gt;5.8&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -zxvf jexus-&lt;span class=&quot;number&quot;&gt;5.8&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd jexus-&lt;span class=&quot;number&quot;&gt;5.8&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ./upgrade&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;5.8.1差不多是现在最新版本了。&lt;/p&gt;
&lt;p&gt;###第三步 jexus 支持PHP&lt;/p&gt;
&lt;p&gt;先在ubuntu上安装一下PHP5-CGI.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.linuxidc.com/Linux/2012-05/60172.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用 Jexus ASP.NET WEB服务器搭建 PHP 网站的具体方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;总结来说就是下面两句：&lt;br&gt;&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;update&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt; install php5-cgi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接着：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)修改“/etc/php.ini”文件:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;找到cgi.force_redirect=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;一行，把前边的&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt;号去掉，把值从&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;改为&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;，如：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cgi.force_redirect=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)修改jws.conf。打开jexus文件夹中的jws.conf，作如下配置：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;填写PHP-CGI程序路径和工作进程数。如：“php-fcgi.&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;=/usr/bin/php-cgi,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;”。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)修改网站配置。在需要使用PHP的网站的配置文件中添加:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fastcgi.add=php|socket:/var/run/jexus/phpsvr&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/shanyou/p/3369322.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jexus 支持PHP的三种方式-张善友&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;搞完上面这些，理论上你的jexus已经能跑PHP网站了。&lt;/p&gt;
&lt;p&gt;###第四步 安装mywebsql&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mywebsql.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mywebsql首页&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;mywebsql跑起来应该是下图的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xread.com1.z0.glb.clouddn.com/7d902b94-f132-4041-84fa-78f044f91358&quot; alt=&quot;mywebsql效果图&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://sourceforge.net/projects/mywebsql/files/stable/mywebsql-3.6.zip/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; /tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget https:&lt;span class=&quot;comment&quot;&gt;//sourceforge.net/projects/mywebsql/files/stable/mywebsql-3.6.zip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp mywebsql-3.6.&lt;span class=&quot;keyword&quot;&gt;zip&lt;/span&gt; /&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;/www &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; /&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;/www&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -zxvf mywebsql-3.6.&lt;span class=&quot;keyword&quot;&gt;zip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;把mywebsql网站文件弄好之后，就可以去看jexus配置php网站了。&lt;/p&gt;
&lt;p&gt;jexus的网站配置文件夹一般路径就是/usr/jexus/siteconf/&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /usr/jexus/siteconf/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi mywebSQL &lt;span class=&quot;comment&quot;&gt;#创建网站配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; .. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./jexus restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的mywebSQL里面就写网站配置了，主要是端口号/运行环境之类的配置。&lt;/p&gt;
&lt;p&gt;贴一下我的配置：&lt;/p&gt;
&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#仅供参考&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;####&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Web Site: Default&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port=&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root=/ /var/www/mywebsql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hosts=*    &lt;span class=&quot;comment&quot;&gt;#OR your.com,*.your.com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;usephp =&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fastcgi.add=php|&lt;span class=&quot;attribute&quot;&gt;socket&lt;/span&gt;:/var/run/jexus/phpsvr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# addr=0.0.0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# CheckQuery=false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# NoLog=true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# NoFile=/index.aspx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Keep_Alive=false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# UseGZIP=true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# UseHttps=true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# DenyFrom=192.168.0.233, 192.168.1.*, 192.168.2.0/24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# AllowFrom=192.168.*.*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# DenyDirs=~/cgi, ~/upfiles&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# indexes=myindex.aspx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# rewrite=^/.+?\.(asp|php|cgi|pl|sh)$ /index.aspx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# reproxy=/bbs/ http://192.168.1.112/bbs/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Jexus php fastcgi address is &#39;/var/run/jexus/phpsvr&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# fastcgi.add=php|socket:/var/run/jexus/phpsvr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# php-fpm listen address is &#39;127.0.0.1:9000&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;######&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;##&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# fastcgi.add=php|tcp:127.0.0.1:9000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;到这里，访问&lt;a href=&quot;http://你的主机IP:上面配置的端口号&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://你的主机IP:上面配置的端口号&lt;/a&gt; 就能看到下面的页面了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xread.com1.z0.glb.clouddn.com/df3951c0-9d3d-4085-b577-743df68c1d98&quot; alt=&quot;MywWebSQL登陆页&quot;&gt;&lt;/p&gt;
&lt;p&gt;输入账号密码就能登陆。&lt;/p&gt;
&lt;p&gt;###然而….&lt;br&gt;我登陆的时候显示，系统提示：没有安装客户端库。&lt;/p&gt;
&lt;p&gt;###第五步 配置PHP MySQL库&lt;/p&gt;
&lt;p&gt;于是又跑去看了一下MyWebSQL的说明，文档上说可以在/install.php上面看配置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xread.com1.z0.glb.clouddn.com/cf8d88d8-fb5d-42f0-81cc-e0fbb566ebe5&quot; alt=&quot;这是配置好的效果图&quot;&gt;&lt;/p&gt;
&lt;p&gt;显示：&lt;/p&gt;
&lt;p&gt;MySQL Client Library    client library is not installed&lt;br&gt;MySQL improved functionality    client library is not installed&lt;/p&gt;
&lt;p&gt;好吧，PHP MySQL客户端库没有安装….&lt;/p&gt;
&lt;p&gt;那就安装咯。&lt;br&gt;于是找到了下面一个文章：&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/CheeseZH/p/4694135.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ZH奶酪：Ubuntu 14.04安装LAMP(Linux，Apache，MySQL，PHP)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装一下基础库&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; install php5 libapache2-&lt;span class=&quot;keyword&quot;&gt;mod&lt;/span&gt;-php5 php5-mcrypt php5-curl php5-imagick php5-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;搜索一下还有什么库可以安装。&lt;/p&gt;
&lt;p&gt;apt-cache search php5-&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xread.com1.z0.glb.clouddn.com/7bac43bc-01ea-4ce0-ba4b-37a06a51fe3a&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; php5 php5-mysqlnd &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; php5 php5-mysqlnd-ms&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接着重启一下jexus的网站，万事大吉。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前在阿里云上装了一个ubuntu，后来也没怎么用力，就挂这一个mysql数据库。最近在家里用MySQL Workbench 连接阿里云上面的MySQL的时候，连着过了一会就中断了。后来看了一圈回来才发现，目测是家里电信宽带的锅，不断给我动态分配IP地址….后来群里面的小伙
    
    </summary>
    
      <category term="ubuntu" scheme="http://codelover.link/categories/ubuntu/"/>
    
    
  </entry>
  
  <entry>
    <title>.NET-lmabda避免修改绑定变量</title>
    <link href="http://codelover.link/2016/04/20/%E6%8A%80%E5%B7%A7%E9%81%BF%E5%85%8D%E4%BF%AE%E6%94%B9%E7%BB%91%E5%AE%9A%E5%8F%98%E9%87%8F/"/>
    <id>http://codelover.link/2016/04/20/技巧避免修改绑定变量/</id>
    <published>2016-04-20T13:19:01.001Z</published>
    <updated>2016-04-20T13:19:01.001Z</updated>
    
    <content type="html">&lt;p&gt;先看一段代码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#region test1 闭包

public static void test1()
{
    int index = 0;
    Func&amp;lt;IEnumerable&amp;lt;int&amp;gt;&amp;gt; sequence =()=&amp;gt;GetEnumrableInt(index);

    index = 20;
    foreach(int n in sequence())
        Console.WriteLine(n);

    Console.WriteLine(&amp;quot;Done&amp;quot;);

    index = 100;
    foreach (int n in sequence())
        Console.WriteLine(n);
}


public static IEnumerable&amp;lt;int&amp;gt; GetEnumrableInt(int index)
{
    List&amp;lt;int&amp;gt; l = new List&amp;lt;int&amp;gt;();
    for(int i=index;i&amp;lt;index+30;i++)
    {
        l.Add(i);
    }
    return l;
}

#endregion
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面一坨代码演示了在闭包中使用了外部变量，随即又在外部修改了这些变量的情况，得到的结果是输出了20-50的数，然后又输出了100-130之间的数。这种行为有点诡异，但是确实有存在的意义…(书本这样说的，我到觉得很少会用到。)&lt;/p&gt;
&lt;p&gt;为了将查询表达式转换成可执行代码，C#编译器做了很多工作。一般而言，C#编译器将查询和lambda表达式转换成 “静态委托”、”实例委托” 或 “闭包”。编译器将根据lambda表达式中的代码选择一种实现方式。选择哪种方式依赖于lambda表达式的主体（body）。这看上去似乎是一些语言上的实现细节，但它却会显著地影响到我们的代码。编译器选择何种实现将可能导致diamante行为发生微妙的变化。&lt;/p&gt;
&lt;p&gt;并不是任何的lambda表达式都会生成同样结构的代码。&lt;/p&gt;
&lt;p&gt;对于编译器来说，最简单的一种行为是为以下形式的代码生成委托。  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//我们的lambda表达式
public static void test2()
{
    int[] someNum = {0,1,2,3,4,5,6,7,8,9,10 };

    IEnumerable&amp;lt;int&amp;gt; ans = from n in someNum
                           select n * n;

    foreach (int i in ans)
        Console.WriteLine(i);

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;编译器将使用静态委托来实现n*n的lambda表达式，其为上面代码生成的代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; //编译器为我们的lambda生成的代码
#region 等价于 test2()
private static int HiddenFunc(int n)
{
    return n * n;
}

//静态委托
private static Func&amp;lt;int, int&amp;gt; HiddenDelegate;

public void test2_1()
{

    int[] someNum = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };

    if(HiddenDelegate==null)
    {
        HiddenDelegate = new Func&amp;lt;int, int&amp;gt;(HiddenFunc);
    }
    IEnumerable&amp;lt;int&amp;gt; ans = someNum.Select&amp;lt;int, int&amp;gt;(HiddenDelegate);

  foreach(int i in ans)
      Console.WriteLine(i);

}
#endregion
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个lambda表达式主体部分并没有访问任何的实例变量或者局部变量。lambda表达式仅仅访问了它的参数。对于这种情况，C#编译器将创建一个静态方法，作为委托的目标。这也是编译器执行的最简单的一种处理方式。若表达式可以通过私有的静态方法实现，那么编译器将生成该私有的静态方法以及相对应的委托定义。对于上面的代码例子中的情况以及仅访问了静态变量的表达式，编译器都会采用这样的方案。&lt;/p&gt;
&lt;p&gt;接下来介绍另一种较为简单的情况：&lt;br&gt;lambda表达式需要访问类型的实例变量，但无需访问外层方法中的局部变量。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class ModFilter
{
    private readonly int modules;

    public ModFilter(int mod)
    {
        modules = mod;
    }


    public IEnumerable&amp;lt;int&amp;gt; FindValues(IEnumerable&amp;lt;int&amp;gt; sequence)
    {

        return from n in sequence
               where n % modules == 0 //新添加的表达式
               select n * n;  //和前面的例子是一样的
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;/* &lt;/p&gt;
&lt;p&gt;在这种情况下，编译器将为表达式创建一个实例方法来包装该委托。&lt;br&gt;其基本概念和前一种情况一致，只是这里使用了实例方法，以便读取并修改当前对象的状态。&lt;br&gt;与静态委托的例子一样，这里编译器将把lambda表达式转换成我们熟悉的代码。其中包含委托的定义以及方法调用。&lt;br&gt;如下：&lt;/p&gt;
&lt;p&gt;*/&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class ModFilter_Other
{
    private readonly int modules;


    //实例方法
    private bool WhereClause(int n)
    {
        return ((n%this.modules) ==0);
    }


    private static int SelectClause(int n)
    {
        return n * n;
    }

    private static Func&amp;lt;int, int&amp;gt; SelectDelegate;




    public ModFilter_Other(int mod)
    {
        modules = mod;
    }


    public IEnumerable&amp;lt;int&amp;gt; FindValues(IEnumerable&amp;lt;int&amp;gt; sequence)
    {
        if(SelectDelegate==null)
        {
            SelectDelegate = new Func&amp;lt;int, int&amp;gt;(SelectClause);
        }

        return sequence.Where&amp;lt;int&amp;gt;(
            new Func&amp;lt;int, bool&amp;gt;(this.WhereClause)).
            Select&amp;lt;int, int&amp;gt;(SelectClause);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;概括来说便是：lambda表达式中的代码访问了对象实例中的成员变量，那么编译器将生成实例方法来表示lambda表达式中的代码。其实这并没有什么奇特之处——编译器省去了我们的一些代码输入工作，代码也变得整洁很多，本质来说这还是普通的方法调用。&lt;/p&gt;
&lt;p&gt;不过若是lambda表达式中访问到了外部方法中的局部变量或者方法参数，那么编译器将帮你完成很多工作。&lt;/p&gt;
&lt;p&gt;这里会用到闭包。编译器将生成一个私有的嵌套类型，以便为局部变量实现闭包。&lt;/p&gt;
&lt;p&gt;局部变量必须传入到实现了lambda表达式主体部分的委托里。&lt;/p&gt;
&lt;p&gt;此外，所有由该lambda表达式执行的对这些局部变量所作的修改都必须能够在外部访问到。&lt;/p&gt;
&lt;p&gt;当然，代码中内层和外层中共享的可能不止有一个变量，也可能不止一个的查询表达式。&lt;/p&gt;
&lt;p&gt;我们来修改一下该实例方法，让其访问一个局部变量。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class ModFilter
{
      private readonly int modules;

      public ModFilter(int mod)
      {
          modules = mod;
      }


      public IEnumerable&amp;lt;int&amp;gt; FindValues(IEnumerable&amp;lt;int&amp;gt; sequence)
      {
          int numValues = 0;

          return from n in sequence
                 where n % modules == 0 //新添加的表达式
                 select n * n / ++ numValues; //访问局部变量
      }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意，select字句需要访问numValues这个局部变量。编译器为了创建这个闭包，需要使用嵌套类型来实现你所需要的行为。下面展示的是编译器为你生成的代码。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  public class ModFilter
 {
    private sealed class Closure
    {
        public ModFilter outer;

        public int numValues;

        public int SelectClause(int n)
        {
            return ((n * n) / ++this.numValues);
        }
    }



    private readonly int modules;


    //实例方法
    private bool WhereClause(int n)
    {
        return ((n % this.modules) == 0);
    }

    public ModFilter(int mod)
    {
        modules = mod;
    }


    public IEnumerable&amp;lt;int&amp;gt; FindValues(IEnumerable&amp;lt;int&amp;gt; sequence)
    {
        Closure c = new Closure();
        c.outer = this;
        c.numValues = 0;

        return sequence.Where&amp;lt;int&amp;gt;(
            new Func&amp;lt;int, bool&amp;gt;(this.WhereClause)).
            Select&amp;lt;int, int&amp;gt;(c.SelectClause);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在上面这段代码中，编译器专门创建了一个嵌套类，用来容纳所有将在lambda表达式中访问或修改的变量。实际上，这些局部变量将完全被嵌套类的字段所代替。lambda表达式内部的代码以及表达式外部(但仍在当前方法内)的代码访问的均是同一个字段，lambda表达式中的逻辑也被编译成了内部类的一个方法。&lt;/p&gt;
&lt;p&gt;对于lambda表达式中将要用到的外部方法的参数，编译器也会以对待局部变量的方式实现：编译器将这些参数复制到表示该闭包的嵌套类中。&lt;/p&gt;
&lt;p&gt;回到最开始的那个示例，这是我们应该可以理解这种看似怪异的行为了。变量index在传入闭包后，但在查询开始执行前曾被外部代码修改。也就是说，你修改了闭包的内部状态，然后还期待其能够回到从前的状态开始执行，显然这是不可能实现的。&lt;/p&gt;
&lt;p&gt;考虑到延迟执行中的交互以及编译器实现闭包的方式，修改查询与外部代码之间绑定的变量将可能会引发错误的行为。&lt;br&gt;因此，我们应该尽量避免在方法中修改哪些将要传入到闭包中，并将在闭包中使用的变量。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;先看一段代码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#region test1 闭包

public static void test1()
{
    int index = 0;
    Func&amp;lt;IEnumerable&amp;lt;int&amp;gt;&amp;gt; sequence =
    
    </summary>
    
      <category term=".net" scheme="http://codelover.link/categories/net/"/>
    
    
  </entry>
  
  <entry>
    <title>C#LINQ 优点 总结(转载)</title>
    <link href="http://codelover.link/2016/04/20/LINQ%E4%BC%98%E7%82%B9%E6%80%BB%E7%BB%93(%E8%BD%AC%E8%BD%BD)/"/>
    <id>http://codelover.link/2016/04/20/LINQ优点总结(转载)/</id>
    <published>2016-04-20T13:19:00.985Z</published>
    <updated>2016-04-20T13:19:00.985Z</updated>
    
    <content type="html">&lt;p&gt;原文链接：&lt;a href=&quot;http://www.cnblogs.com/c-jquery-linq-sql-net-problem/archive/2011/01/15/LINQ_Merit.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/c-jquery-linq-sql-net-problem/archive/2011/01/15/LINQ_Merit.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这几天在读一本LINQ方面的书《Essential LINQ》,在这里和大家分享下。&lt;/p&gt;
&lt;p&gt;由于对LINQ的深入总结需要大量的篇幅，因此在这里分成几个部分来讲。&lt;/p&gt;
&lt;p&gt;（*我看《Essential LINQ》是英文版的，有些名词不能翻译成正统的中文解释请给予谅解）&lt;/p&gt;
&lt;p&gt;LINQ的优点：&lt;/p&gt;
&lt;p&gt;LINQ基本有以下七个优点，让我来一一举例说明：&lt;/p&gt;
&lt;p&gt;#####1.Integrated：所谓的Integrated（集成化），LINQ是从以下方面体现集成的：&lt;/p&gt;
&lt;p&gt;(1):把查询语法融入了C#(VB)这些语言中，让他变成了一种语法。这样就能和C#中的其他语法一样支持：&lt;/p&gt;
&lt;p&gt;语句高亮显示，类型检查，允许使用debugger调试&lt;/p&gt;
&lt;p&gt;(2):把以前复杂的查询前的工作都集成封装起来，让开发人员侧重于查询。&lt;/p&gt;
&lt;p&gt;(3):集成后的语法更加的清晰易懂，可读性较高。&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;比较： &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//原来的格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SqlConnection sqlConn = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SqlConnection(connectionString);&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlConn.Open();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SqlCommand command = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SqlCommand();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;command.Connection = sqlConn;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;command.CommandText = &lt;span class=&quot;string&quot;&gt;&quot;Select * From Customer&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SqlDataReader dataReader = command.ExecuteReader(CommandBehavior.CloseConnection);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//LINQ的格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NORTHWNDDataContext dc = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NORTHWNDDataContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; query = &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; c &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dc.Customers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;#####2.Unitive：所谓Unitive(统一化)就指不管对任何类型外部和内部数据源(对象集合,xlm,数据库数据)都使用统一的查询语法。&lt;/p&gt;
&lt;p&gt;使用统一化查询语言的好处在于以下几点：&lt;/p&gt;
&lt;p&gt;你不用因为要使用不太熟悉的数据源而花很多精力去了解它，你可以快速简单的使用LINQ语法对起查询。&lt;br&gt;由于使用了统一的语法，可以使代码维护变的更加简单。&lt;br&gt;以下代码体现了LINQ的统一化：&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//数据源:对象集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; query = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; c &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GetCustomers&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; c&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//数据源:SQL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; query1 = &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; c &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dc.Customers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//数据源:XML&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; query2 = &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; c &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; customers.Descendants(&lt;span class=&quot;string&quot;&gt;&quot;Customer&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;#####3.Extensible：所谓Extensible(可扩展)指以下2个方面:&lt;/p&gt;
&lt;p&gt;(1).可查询数据源的扩展。 LINQ提供了个LINQ provider model，你可以为LINQ创建或提供provider让LINQ支持更多的数据源。&lt;/p&gt;
&lt;p&gt;(2).可扩展查询方法。开发者可以根据自己的需求为LINQ重写和扩展查询方法。&lt;/p&gt;
&lt;p&gt;以下是些第三方的LINQ provider：&lt;/p&gt;
&lt;p&gt;LINQ Extender, LINQ to JavaScript, LINQ to JSON, LINQ to MySQL, LINQ to Flickr, LINQ to Google&lt;/p&gt;
&lt;p&gt;#####4.Declarative：所谓Declarative(声明式)，简单的来说指的是开发人员只要告诉程序做什么，程序自己判断怎么做。&lt;/p&gt;
&lt;p&gt;Declarative programming(声明式编程)的优点体现在以下2点：&lt;/p&gt;
&lt;p&gt;(1).提高了开发速度。因为开发者不用书写大量的代码来具体化执行步骤，只许告诉程序做什么。&lt;/p&gt;
&lt;p&gt;(2).提高代码优化空间。因为开发者不用参与干涉对程序执行的具体步骤，这样就提供给编译器更多的空间去优化代码。&lt;/p&gt;
&lt;p&gt;举例SQL来说，LINQ生成的SQL语句往往比一对SQL水平一般的开发者能写出更好的SQL语句。&lt;/p&gt;
&lt;p&gt;比较Declarative programming 与 Imperative programming：&lt;br&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//声明式编程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;gt; lists = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;#123; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &amp;#125;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;#123; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &amp;#125; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; query = from list &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lists&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            from &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            where &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt; % &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            orderby &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt; descending&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            select &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//命令式编程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt; list1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list1.Add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list1.Add(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list1.Add(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt; list2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list2.Add(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list2.Add(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;gt; lists1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lists1.Add(list1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lists1.Add(list2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt; newList = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foreach (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lists1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      foreach (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; item)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt; % &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            newList.Add(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;newList.Reverse();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;#####5.Hierarchical：所谓Hierarchical(层次化)指使用面向对象的方式抽象数据。&lt;/p&gt;
&lt;p&gt;SQL是关系型数据库，它以关系的方式描述数据以数据的联系，但我们的程序设计成面向对象的因此我们在程序里得到的数据库数据往往都是&lt;/p&gt;
&lt;p&gt;rectangular grid（平面的显示数据）。但是LINQ通过所谓的O-R Mapping方式，把关系型转换成对象与对象方式描述数据。&lt;/p&gt;
&lt;p&gt;这样带来的好处是：开发者能直接以对象的方式去操作数据，对习惯面向对象的开发者来说面向对象模型更易理解。&lt;/p&gt;
&lt;p&gt;#####6.Composable：所谓Composable(可组成)指LINQ可以把一个复杂的查询拆分成多个简单查询。&lt;/p&gt;
&lt;p&gt;LINQ返回的结果都是基于接口：IEnumerable&lt;t&gt;，因此能对查询结果继续查询，而且LINQ具有延迟执行的特性因此拆分执行不会影响效率。&lt;/t&gt;&lt;/p&gt;
&lt;p&gt;优点在于：&lt;/p&gt;
&lt;p&gt;(1).方便调试。把复杂的查询拆分成简单的查询，然后逐个调试。&lt;/p&gt;
&lt;p&gt;(2).便于代码维护。把代码拆分后能使代码变的更易理解。&lt;/p&gt;
&lt;p&gt;以下代码体现了可组成性：&lt;br&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//以下代码体现了Composable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;gt; lists = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &amp;#125;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;#123; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &amp;#125; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; query1 = from list &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lists&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             from &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             select &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; query2 = from &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; query1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             where &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt; % &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             select &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; query3 = from &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; query2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             orderby &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt; descending&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             select &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;######7.Transformative：所谓Transformative(可转换)指的是LINQ能把一种数据源的内容转换到其他数据源。&lt;/p&gt;
&lt;p&gt;方便用户做数据移植。&lt;/p&gt;
&lt;p&gt;以下代码体现了转换的特性：&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//把关系型数据转换成XML型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XElement(&lt;span class=&quot;string&quot;&gt;&quot;Orders&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; c &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dc.Customers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; c.City == &lt;span class=&quot;string&quot;&gt;&quot;Paris&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; new &lt;span class=&quot;title&quot;&gt;XElement&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;Order&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                new XAttribute(&lt;span class=&quot;string&quot;&gt;&quot;Address&quot;&lt;/span&gt;, c.Address&lt;/span&gt;)))&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以上就是LINQ的几大优点，很高兴能在这里和大家分享。有任何不足之处请给予补充和纠正，谢谢光临小舍。&lt;/p&gt;
&lt;p&gt;//2011/1/28 补充(LINQ TO SQL)&lt;/p&gt;
&lt;p&gt;在LINQ TO SQL 方面，如果使用LINQ TO SQL可以有效的防止SQL注入，LINQ TO SQL 会把注入的代码当做无用的参数处理。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/c-jquery-linq-sql-net-problem/archive/2011/01/15/LINQ_Merit.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/c-jquery-linq-sql-net-problem/archive/2011/01/15/LINQ_Merit.html&lt;/a&gt; &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原文链接：&lt;a href=&quot;http://www.cnblogs.com/c-jquery-linq-sql-net-problem/archive/2011/01/15/LINQ_Merit.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;htt
    
    </summary>
    
      <category term=".net" scheme="http://codelover.link/categories/net/"/>
    
    
  </entry>
  
  <entry>
    <title>.NET-join用法</title>
    <link href="http://codelover.link/2016/04/20/Join/"/>
    <id>http://codelover.link/2016/04/20/Join/</id>
    <published>2016-04-20T13:19:00.980Z</published>
    <updated>2016-04-20T13:19:00.980Z</updated>
    
    <content type="html">&lt;p&gt;#.NET   Join&lt;br&gt; 连接：内连接、外连接、左连接、右连接。&lt;br&gt;SQL的Join这里就不多说了，&lt;br&gt;今天主要是看一下LINQ的Join用法，以及Enumerable.Join()的用法。&lt;/p&gt;
&lt;p&gt;Join用于连接数据，首先就是数据之间有联系咯。&lt;/p&gt;
&lt;p&gt;先说Enumerable.Join()。&lt;br&gt;参数类型如下：&lt;br&gt;            public static IEnumerable&lt;tresult&gt; Join&lt;touter, tinner,=&quot;&quot; tkey,=&quot;&quot; tresult=&quot;&quot;&gt;&lt;br&gt;            (&lt;br&gt;                     this IEnumerable&lt;touter&gt; outer,&lt;br&gt;                    IEnumerable&lt;tinner&gt; inner,&lt;br&gt;                    Func&lt;touter, tkey=&quot;&quot;&gt; outerKeySelector,&lt;br&gt;                    Func&lt;tinner, tkey=&quot;&quot;&gt; innerKeySelector,&lt;br&gt;                    Func&lt;touter, tinner,=&quot;&quot; tresult=&quot;&quot;&gt; resultSelector&lt;br&gt;            )&lt;br&gt;类型参数&lt;br&gt;TOuter&lt;br&gt;第一个序列中的元素的类型。&lt;br&gt;TInner&lt;br&gt;第二个序列中的元素的类型。&lt;br&gt;TKey&lt;br&gt;键选择器函数返回的键的类型。&lt;br&gt;TResult&lt;br&gt;结果元素的类型。&lt;br&gt;参数&lt;br&gt;outer&lt;br&gt;类型：System.Collections.Generic.IEnumerable&lt;touter&gt;&lt;br&gt;要联接的第一个序列。&lt;br&gt;inner&lt;br&gt;类型：System.Collections.Generic.IEnumerable&lt;tinner&gt;&lt;br&gt;要与第一个序列联接的序列。&lt;br&gt;outerKeySelector&lt;br&gt;类型：System.Func&lt;touter, tkey=&quot;&quot;&gt;&lt;br&gt;用于从第一个序列的每个元素提取联接键的函数。&lt;br&gt;innerKeySelector&lt;br&gt;类型：System.Func&lt;tinner, tkey=&quot;&quot;&gt;&lt;br&gt;用于从第二个序列的每个元素提取联接键的函数。&lt;br&gt;resultSelector&lt;br&gt;类型：System.Func&lt;touter, tinner,=&quot;&quot; tresult=&quot;&quot;&gt;&lt;br&gt;用于从两个匹配元素创建结果元素的函数。&lt;br&gt;返回值&lt;br&gt;类型：System.Collections.Generic.IEnumerable&lt;tresult&gt;&lt;br&gt;IEnumerable&amp;lt;T&amp;gt; that has elements of type TResult that are obtained by performing an inner join on two sequences.” xml:space=”preserve”&amp;gt;一个具有 TResult 类型元素的 IEnumerable&lt;t&gt;，这些元素是通过对两个序列执行内部联接得来的。&lt;br&gt;使用说明&lt;br&gt;在 Visual Basic 和 C# 中，可以在 IEnumerable&lt;touter&gt; 类型的任何对象上将此方法作为实例方法来调用。当使用实例方法语法调用此方法时，请省略第一个参数。有关详细信息，请参阅 扩展方法 (Visual Basic) 或 扩展方法（C# 编程指南）。&lt;/touter&gt;&lt;/t&gt;&lt;/tresult&gt;&lt;/touter,&gt;&lt;/tinner,&gt;&lt;/touter,&gt;&lt;/tinner&gt;&lt;/touter&gt;&lt;/touter,&gt;&lt;/tinner,&gt;&lt;/touter,&gt;&lt;/tinner&gt;&lt;/touter&gt;&lt;/touter,&gt;&lt;/tresult&gt;&lt;/p&gt;
&lt;p&gt;先上一个MSDN的例子。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;     public static void JoinEx1()         
     {
       Person magnus = new Person { Name = &amp;quot;Hedlund, Magnus&amp;quot; };
       Pet barley = new Pet { Name = &amp;quot;Barley&amp;quot;, Owner = terry };
       Person terry = new Person { Name = &amp;quot;Adams, Terry&amp;quot; };
       Person charlotte = new Person { Name = &amp;quot;Weiss, 
       Charlotte&amp;quot; };
       Pet boots = new Pet { Name = &amp;quot;Boots&amp;quot;, Owner = terry };
       Pet whiskers = new Pet { Name = &amp;quot;Whiskers&amp;quot;, 
       Owner = charlotte};
       Pet daisy = new Pet { Name = &amp;quot;Daisy&amp;quot;, Owner = magnus };

    List&amp;lt;Person&amp;gt; people = new List&amp;lt;Person&amp;gt; 
    { magnus, terry, charlotte };
    List&amp;lt;Pet&amp;gt; pets = new List&amp;lt;Pet&amp;gt; 
    { barley, boots, whiskers, daisy };

    // Create a list of Person-Pet pairs where 
    // each element is an anonymous type that contains a
    // Pet&amp;apos;s name and the name of the Person that owns the Pet.
    var query =
        people.Join(
                    pets,//需要Join的另一个数据源
          person =&amp;gt; person,//自己用来比较的key， lambda 表达式
     pet =&amp;gt; pet.Owner,//另一个数据源用来比较的key， lambda 表达式
(person, pet) =&amp;gt;new { OwnerName = person.Name, Pet = pet.Name } 
               //想要取出来的数据，支持匿名对象， lambda 表达式);
    foreach (var obj in query)
    {
      Console.WriteLine( &amp;quot;{0} - {1}&amp;quot;,obj.OwnerName,obj.Pet);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; LINQ的Join&lt;br&gt;同样是上面的数据，如果换成LINQ的Join，写法如下：&lt;br&gt;            var query = from person in people // 第一个数据源&lt;br&gt;                      join pet in pets            //第二个数据源&lt;br&gt;                      on person equals pet.Owner  //Join条件&lt;br&gt;                      select  new { OwnerName = person.Name, Pet = pet.Name };&lt;br&gt;                      //要到得到的数据。&lt;/p&gt;
&lt;p&gt;上面两种写法得到的结果都是内链接结果，至于左连接、右连接、外连接….&lt;br&gt;等我下次有心情再更新吧，再不走家里的键盘又要坏了。 &lt;/p&gt;
&lt;p&gt;一些资料链接：&lt;br&gt;&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/library/bb311040.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://msdn.microsoft.com/zh-cn/library/bb311040.aspx&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/library/bb534675%28v=vs.110%29.aspx?f=255&amp;amp;MSPPError=-2147217396&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://msdn.microsoft.com/zh-cn/library/bb534675%28v=vs.110%29.aspx?f=255&amp;amp;MSPPError=-2147217396&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/Ivony/archive/2008/08/18/1270555.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/Ivony/archive/2008/08/18/1270555.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/Ivony/archive/2008/08/28/1278643.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/Ivony/archive/2008/08/28/1278643.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/Ivony/archive/2008/10/14/1309807.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/Ivony/archive/2008/10/14/1309807.html&lt;/a&gt; ; &lt;/p&gt;
&lt;p&gt;LINQ GroupJoin 实现左连接&lt;br&gt;var queryGroup = from person in people // 第一个数据源&lt;br&gt;                                join pet in pets //第二个数据源&lt;br&gt;                                on person equals pet.Owner into ps //加了into,华丽变身GroupJoin&lt;br&gt;                                select new { OwnerName = person.Name, Pet = ps }; //要到得到的数据。 &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;#.NET   Join&lt;br&gt; 连接：内连接、外连接、左连接、右连接。&lt;br&gt;SQL的Join这里就不多说了，&lt;br&gt;今天主要是看一下LINQ的Join用法，以及Enumerable.Join()的用法。&lt;/p&gt;
&lt;p&gt;Join用于连接数据，首先就是数据之间有联系咯。&lt;/
    
    </summary>
    
      <category term=".net" scheme="http://codelover.link/categories/net/"/>
    
    
  </entry>
  
  <entry>
    <title>bytes to string</title>
    <link href="http://codelover.link/2016/03/03/Bytes%20-To-String/"/>
    <id>http://codelover.link/2016/03/03/Bytes -To-String/</id>
    <published>2016-03-03T15:19:50.488Z</published>
    <updated>2016-03-03T15:19:50.488Z</updated>
    
    <content type="html">&lt;p&gt;有时候我们会遇到需要把数据加密之后再网络上传输的需求，这样的话一般使用AES256之类的算法，经过运算之后得到一个byte数组，接着转换成string，就扔出去了。对方拿到之后，用密钥解密之后便得到了对应的数据。&lt;/p&gt;
&lt;p&gt;在C#里面，Byte数组转String字符串我们一般用Convert.ToBase64()完成。&lt;/p&gt;
&lt;p&gt;代码如下：&lt;br&gt;&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BytesToString&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] buff&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Convert.ToBase64String(buff);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] StringToBytes(&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; input)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Encoding.UTF8.GetBytes(input);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; 一般来说这样也没撒问题了，不过，如果这个数据是通过URL的方式给出去的，这时候就要考虑一下特殊字符编码问题了。+、空格、%之类的特殊字符可能会导致切断URL传参的数据，导致得到的数据不一致。这样的话，解密也做不下去了。&lt;/p&gt;
&lt;p&gt; 相关资料：&lt;br&gt; &lt;br&gt;1、&lt;a href=&quot;http://www.ruanyifeng.com/blog/2010/02/url_encoding.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于URL编码&lt;/a&gt;&lt;br&gt; &lt;br&gt;2、&lt;a href=&quot;http://blog.csdn.net/luo_deng/article/details/12186535&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;URL编码—-url参数中有+、空格、=、%、&amp;amp;、#等特殊符号的问题解决&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; 不过也好在，C#提供了一个HttpUtility.UrlEncode(input)和HttpUtility.UrlEncode(input)这两个函数，让我们直接把上面的特殊字符转换成URL可识别的转义字符。&lt;br&gt; 数据出去之后先Encode一下，回来之后Decode一下，好像问题都解决了吧。&lt;/p&gt;
&lt;p&gt;然而我们都忘了一件事情，URL到了浏览器之后，自然会对URL里面的东西Decode一次。&lt;br&gt;我实现的时候，在后台验证的时候又Decode一次,这就出问题了。&lt;/p&gt;
&lt;p&gt;问题在哪呢？一个encode的字符被decode两次，内容已经被改掉了…&lt;br&gt;这就导致解密的时候直接挂了….&lt;/p&gt;
&lt;p&gt;这样看来，&lt;br&gt;Convert.ToBase64String()这个不够靠谱，出来的数据可能会有特殊字符的问题。&lt;br&gt;怎么解决呢？那天晚上和老大/CTO都在看这个bug。一下子都没撒好办法….&lt;/p&gt;
&lt;p&gt;后来CTO想了一下，说byte不就是最大不久255么？直接转16进制字符就是嘛。&lt;br&gt;于是有了下面的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;xmlDocTag&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;///&lt;/span&gt; byte数组转string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;xmlDocTag&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;xmlDocTag&quot;&gt;&amp;lt;param name=&quot;bytes&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;xmlDocTag&quot;&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BytesToString&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] bytes&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bytes == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;.Empty;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;.Join(&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;.Empty, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   bytes.Select(b =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;.Format(&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;0:x2&amp;#125;&quot;&lt;/span&gt;, b)).ToArray());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;xmlDocTag&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;///&lt;/span&gt; string转byte数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;xmlDocTag&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;xmlDocTag&quot;&gt;&amp;lt;param name=&quot;str&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;xmlDocTag&quot;&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;&lt;span class=&quot;xmlDocTag&quot;&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] StringToBytes(&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;.IsNullOrEmpty(str))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] bytes = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[str.Length / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; str.Length; i += &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bytes[i / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] = Convert.ToByte(&lt;span class=&quot;string&quot;&gt;&quot;0x&quot;&lt;/span&gt; + str[i] + str[i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bytes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;问题解决。&lt;/p&gt;
&lt;p&gt;关于base64的实现，下面这个链接是相关资料，有兴趣自己看啦。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.hejingzong.cn/blog/ViewBlog_36.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;C#/ASP.NET Base64编码原理及实现&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/tuyile006/archive/2008/01/17/1043178.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;C＃实现Base64编码与解码&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有时候我们会遇到需要把数据加密之后再网络上传输的需求，这样的话一般使用AES256之类的算法，经过运算之后得到一个byte数组，接着转换成string，就扔出去了。对方拿到之后，用密钥解密之后便得到了对应的数据。&lt;/p&gt;
&lt;p&gt;在C#里面，Byte数组转String字符串我
    
    </summary>
    
      <category term=".net" scheme="http://codelover.link/categories/net/"/>
    
    
  </entry>
  
  <entry>
    <title>C#.NET托管堆和垃圾回收</title>
    <link href="http://codelover.link/2016/03/01/%E6%89%98%E7%AE%A1%E5%A0%86%E5%92%8C%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/"/>
    <id>http://codelover.link/2016/03/01/托管堆和垃圾回收/</id>
    <published>2016-03-01T12:49:34.588Z</published>
    <updated>2016-02-23T15:25:15.626Z</updated>
    
    <content type="html">&lt;p&gt;###托管堆基础&lt;br&gt; 简述：每个程序都要使用这样或那样的资源，包括文件、内存缓冲区、屏幕空间、网络连接…..事实上，在面向对象的环境中，每个类型都代表可供程序使用的一种资源。要使用这些资源，必须为代表资源的类型分配内存。&lt;/p&gt;
&lt;p&gt; 以下是访问一个资源所需步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;调用IL指令newobj，为代表资源的类型分配内存。(C# new操作符)&lt;/li&gt;
&lt;li&gt;初始化内存，设置资源的初始状态。（一般指构造函数）&lt;/li&gt;
&lt;li&gt;访问类型的成员来使用资源。（使用成员变量、方法、属性等）&lt;/li&gt;
&lt;li&gt;摧毁资源的状态以进行清除。（Dispose？？？）&lt;/li&gt;
&lt;li&gt;释放内存。（GC） &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;###从托管堆分配资源&lt;/p&gt;
&lt;p&gt;CLR要求所有的对象都从托管堆分配。&lt;br&gt;进程初始化，CLR划出一个地址空间区域作为托管堆。CLR还要维护一个指针，姑且叫NextObjPtr，该指针指向下一个对象在堆中的分配位置。刚开始的时候， NextObjPtr 设为地址空间区域的基地址。&lt;br&gt;一个区域被非垃圾对象填满后，CLR会分配更多的区域。&lt;/p&gt;
&lt;p&gt;这一个过程一直重复，直至整个进程地址空间被填满。所以，应用程序内存收进程的虚拟地址空间的限制。&lt;/p&gt;
&lt;p&gt;32位进程最多能分配1.5GB，64位进程最多能分配8T。&lt;br&gt;注：进程内存大小的相关资料&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/library/windows/hardware/Dn613959(v=vs.85&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Memory Support and Windows Operating Systems&lt;/a&gt;.aspx)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/library/ms189334.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;进程地址空间&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/yusiguyuan/article/details/12405799&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 32位模式下C/C++程序可用最大内存&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;###C# 的new操作符导致CLR执行以下操作：&lt;/p&gt;
&lt;p&gt;1、计算类型的字段（以及从基类型继承的字段）所需要的字节数。&lt;/p&gt;
&lt;p&gt;2、加上对象的开销所需的字节数。每个对象都有两个开销字段：类型对象指针和同步块索引。对于32位应用程序，这两个字段各需要32位，所以每个对象需要增加8字节。对于64位应用程序，这两个字段各需要64位，所以每个对象要增加16字节。&lt;/p&gt;
&lt;p&gt;3、CLR检查区域中是否有分配对象所需的字节数。如果托管堆有足够的可用空间，就在NetxObjPtr指针指向的地址处放入对象，为对象分配的字节会被清零。接着调用类型的构造器（为this参数传递NextObjPtr），new操作符返回对象引用。就在返回这个对象引用之前，NextObjPtr指针的值会加上这个对象占用的字节数来得到一个新值，即下个对象放入托管堆时的地址。如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://r.photo.store.qq.com/psb?/4d3e65a5-4593-42bc-88f9-7bbb2e647ebe/i3rlSCPAcnT9pL0El0BptPIBpuvnxHpBw9Nkp*UqIjw!/o/dJMAAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=LwKNAC8CjQADACU!&amp;amp;su=1199793361&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;###垃圾回收算法&lt;/p&gt;
&lt;p&gt;####CLR使用引用跟踪算法。&lt;br&gt;引用跟踪算法只关心引用类型的变量，因为只有这种变量才能引用堆上面的对象；&lt;br&gt;值类型变量直接包含值类型实例。引用类型变量可在许多场合使用，包括类的静态和实例字段，或者方法的参数和局部变量。这里我们将所有引用类型的变量都称为根。&lt;br&gt;CLR开始GC时，首先暂停所有的线程。(这样可以防止线程在CLR检查期间访问对象并更改其状态。) 然后CLR进入GC标记阶段。在这个阶段，CLR遍历堆中的所有对象，将同步块索引字段中的一位设为0。这表明所有的对象都应删除。然后，CLR检查所有的活动根，查看他们引用了哪些对象。这正是CLR的GC被称作引用跟踪GC的原因。如果一个根包含null，CLR忽略这个根并继续检查下一个根。&lt;br&gt;下图展示一个堆，其中包含几个对象。&lt;br&gt;&lt;img src=&quot;http://r.photo.store.qq.com/psb?/4d3e65a5-4593-42bc-88f9-7bbb2e647ebe/eVBVeXGrNAfoWfyRgl4aC2RRSGgiDpmbrocv4lTSJMA!/o/dJIAAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=gAIFAYACBQEDACU!&amp;amp;su=1176931729&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;图片1&quot;&gt;&lt;/p&gt;
&lt;p&gt;应用程序的根直接引用对象A 、C、D 、F。所有的对象都已经被标记。标记对象D时，GC发现这个对象含有一个引用对象H的字段，造成对象H也被标记。标记过程会持续，直至应用程序的所有根所有检查完毕。&lt;br&gt;检查完毕后，堆中的对象要么已标记，要么未标记。已标记的对象不能被垃圾回收，因为至少有一个根在引用它。我们说这种对象是可达的，因为应用程序可以通过引用它的变量抵达它。 未标记的对象是不可达的，因为应用程序中不存在使对象能被再次访问的根。&lt;/p&gt;
&lt;p&gt;CLR知道哪些对象可以幸存，哪些可以被删除后，进入GC的压缩（类似于碎片整理）阶段。在压缩阶段，CLR对堆中已标记的对象进行“乾坤大挪移”，整理所有幸存下来的对象，使他们占用连续的内存。&lt;/p&gt;
&lt;p&gt;这样做的好处在于：&lt;/p&gt;
&lt;p&gt;1、所有幸存对象在内存中紧挨在一起，恢复了引用的“局部性”，减少了应用程序的工作集，从而提升了将来访问这些对象时的性能；&lt;/p&gt;
&lt;p&gt;2、经过整理后，可用空间也是连续的，整个地址空间区段得到了解放，允许其他东西进驻。&lt;/p&gt;
&lt;p&gt;在内存中移动了对象之后有一个问题亟待解决。引用幸存对象的根现在引用的还是对象最初在内存中的位置，而非移动后的位置。被暂停的线程恢复执行时，将访问旧的内存位置，会造成内存损坏。 这显然是不能容忍的，所以作为压缩阶段的一部分，CLR还要从每个根减去所引用对象在内存中偏移的字节数。这样就能保证每个根还是引用和之前一样的对象，只是对象在内存中变换了位置。&lt;br&gt;如图：&lt;br&gt;&lt;img src=&quot;http://r.photo.store.qq.com/psb?/4d3e65a5-4593-42bc-88f9-7bbb2e647ebe/FyP2yk1O6kMsq3.u4e4x3qrAxpwbajgSHOd4QHTJOhE!/o/dJIAAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=TQI*AU0CPwEDACU!&amp;amp;su=1202148209&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;##代：提升性能 (待续)&lt;br&gt;CLR的GC是基于代的垃圾回收器，它对你的代码做出了以下几点假设：&lt;/p&gt;
&lt;p&gt;1、对象越新，生存周期越短。&lt;/p&gt;
&lt;p&gt;2、对象越老，生存周期越长。&lt;/p&gt;
&lt;p&gt;3、回收堆的一部分 ，速度快于回收整个堆。&lt;/p&gt;
&lt;p&gt;大量研究表明，这些假设对于现今大多数的应用程序都是成立的，它们影响了垃圾回收器的实现方式。这里将解释代的工作原理。&lt;/p&gt;
&lt;p&gt;托管堆在初始化时不包括对象。添加到堆的对象成为第0代对象。简单来说，第0代对象就是那些新构造的对象，垃圾回收器从未检查过它们。如下图，新启动的应用程序，分配了5个对象（从A到E）。过了一会，C和E变得不可达了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://r.photo.store.qq.com/psb?/4d3e65a5-4593-42bc-88f9-7bbb2e647ebe/77WJus7lssJpEJ2RZREQoNx.5CL31HLdboJbAgCqS0E!/o/dJMAAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=tQIVAbUCFQEDACU!&amp;amp;su=172682065&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;CLR初始化第0代对象选择一个预算容量。如果分配一个新对象造成第0代超预算，就必须启动一次GC。假设对象A到E刚好用完了第0代的空间，那么分配对象F就必须启动GC。GC之后存活的对象现场成为第1代对象。如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://r.photo.store.qq.com/psb?/4d3e65a5-4593-42bc-88f9-7bbb2e647ebe/GEDzaV4pNFNQUuDwl2EQrv*eD9Sk9OJCzx5SpRRI2fk!/o/dGUBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=OAL5ADgC.QADACU!&amp;amp;su=1155276897&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot;&gt;&lt;br&gt;一次GC之后，第0代就不包含任何对象。和前面一样，新对象会分配到第0代。新分配对象F到对象K都到了第0代。&lt;br&gt;&lt;img src=&quot;http://r.photo.store.qq.com/psb?/4d3e65a5-4593-42bc-88f9-7bbb2e647ebe/Op0QokzBTNYCFR6zzm2tpc2V7U70IsIJTeWrd0UAUb0!/o/dGUBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=yAJeAcgCXgEDACU!&amp;amp;su=1124261217&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;之后，程序继续运行，B、H、J变得不可达，它们的内存将在某一个时刻回收。&lt;/p&gt;
&lt;p&gt;假设现在新分配对象L会造成第0代超出预算,造成必须启动垃圾回收。&lt;/p&gt;
&lt;p&gt;开始垃圾回收时,垃圾回收器必须决定检查哪些代。前面说过,CLR初始化时会为第0代对象选择预算.事实上,它还必须为第1代选择预算.&lt;/p&gt;
&lt;p&gt;开始一次垃圾回收时,垃圾回收器还会检查第一代占用了多少内存。在本例中,由于第1代占用内存远少于预算,所以垃圾回收器只检查第0代对象。回顾之前基于代的垃圾回收器做出的第一个假设：对象越新，生存期越短。 因此，第0代包含更多的垃圾的可能性更大，能回收更多的内存。由于忽略第1代中的对象，所以加快了垃圾回收速度。&lt;/p&gt;
&lt;p&gt;显然，忽略第1代中的对象能提升垃圾回收器的性能。但对性能有更大提振作用的是现在不必遍历托管堆中的每个对象。如果根或对象引用了老一代的某个对象，垃圾回收器就可以忽略老对象内部的所有引用，能在更短的时间内构造好可达对象图。当然，如果老对象的字段也可能引用新对象。为了确保对老对象的已更新字段进行检查，垃圾回收器利用了JIT编译器内部的一个机制。这个机制在对象的引用字段发生变化时，会设置一个对应的标志位。这样，垃圾回收器就知道自上一次垃圾回收以来，哪些老对象（如果有的话）已被写入。只有字段发生变化的老对象才需要检查是否引用了第0代中的任何新对象。&lt;/p&gt;
&lt;p&gt;基于代的垃圾回收器还假设越老的对象活得越长。也就是说，第1代对象在应用程序中有可能是继续可达的。如果垃圾回收器检查第1代的对象，很有可能找不到多少垃圾，结果是也回收不了多少内存。因此，对第1代进行垃圾回收很可能是浪费时间的。如果第一代真有垃圾，垃圾将留在那里。如下图：&lt;br&gt;&lt;img src=&quot;http://r.photo.store.qq.com/psb?/4d3e65a5-4593-42bc-88f9-7bbb2e647ebe/Do.yRCBJEnaOfZaUOdxj4II9*pX2BEcX2QmIG6NQPBE!/o/dGUBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=qAI5AagCOQEDACU!&amp;amp;su=187009937&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;程序继续运行，继续往第0代分配对象，同时程序停止对第1代某对象的使用。&lt;/p&gt;
&lt;p&gt;如下图：&lt;br&gt;&lt;img src=&quot;http://r.photo.store.qq.com/psb?/4d3e65a5-4593-42bc-88f9-7bbb2e647ebe/YEqIM16xFsSgXdvEzgrerLnKw7fEItnrSqEzlaYnUfE!/o/dGUBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=egJPAXoCTwEDACU!&amp;amp;su=1118118497&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot;&gt;&lt;br&gt;分配对象P导致第0代超预算，开始GC。第1代的所有对象占据内存仍小于预算，垃圾回收器再次决定只回收第0代。忽略第1代中的垃圾对象。如下图：&lt;br&gt;&lt;img src=&quot;http://r.photo.store.qq.com/psb?/4d3e65a5-4593-42bc-88f9-7bbb2e647ebe/EcdSNU5AatqRERWtVdlJ7LiIPHHXe8.mklN.0hHDK9U!/o/dJQAAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=aAIxAWgCMQEDACU!&amp;amp;su=1214124305&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;程序继续运行，假设第一代的增长导致它的全部对象占用了全部预算。这时候应用程序分配对象P到对象S，使第0代对象达到它的预算总和。如下图：&lt;br&gt;&lt;img src=&quot;http://r.photo.store.qq.com/psb?/4d3e65a5-4593-42bc-88f9-7bbb2e647ebe/6dB68RIUYrqMZ4p0VIY3REJZPg.g3ybkZFIazJ3h.CQ!/o/dJIAAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=jwIiAY8CIgEDACU!&amp;amp;su=177976657&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这时候，应用程序准备分配对象T，由于第一代已满，所以必须开始GC。但这一次垃圾回收器发现第一代占用了太多内存，以至于用完了预算。由于前几次对第0代进行GC时，第1代中可能已经有很多对象变得不可达。所以这次垃圾回收器决定检查第1代和第0代中的所有对象。两代都被垃圾回收后，堆的情况如下图：&lt;br&gt;&lt;img src=&quot;http://r.photo.store.qq.com/psb?/4d3e65a5-4593-42bc-88f9-7bbb2e647ebe/bxdZDsZi2Y6FSDWs7RXNPkkJK8dCzMD.cfnjwNY2Mjs!/o/dJIAAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=tgI2AbYCNgEDACU!&amp;amp;su=197762641&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;托管堆只支持三代：第0代、第1代和第2代。&lt;/p&gt;
&lt;p&gt;CLR初始化时，会为每一代选择预算。&lt;/p&gt;
&lt;p&gt;然而，CLR的垃圾回收是自调节的。&lt;/p&gt;
&lt;p&gt;这意味着垃圾回收器会在执行垃圾回收的过程了解程序的行为。&lt;/p&gt;
&lt;p&gt;例如：假设应用程序构造了许多对象，但每个对象的时间都很短。&lt;br&gt;在这种情况下，对第0代的垃圾回收会回收到大量的内存。事实上，第0代的所有对象都可能被回收。&lt;/p&gt;
&lt;p&gt;如果垃圾回收器发现在回收第0代后存活下来的对象很少，就可能减少第0代的预算。已分配空间的减少意味着垃圾回收将更频繁地发生，但垃圾回收器每次做的事情也减少，这减少了进程的工作集。&lt;/p&gt;
&lt;p&gt;另一方面，如果垃圾回收器回收了第0代，发现还有很多对象存活，没多少内存可以被回收，就会增大第0代的预算。&lt;/p&gt;
&lt;p&gt;同样的启发性算法调整预算适用于了第1代和第2代的预算。&lt;/p&gt;
&lt;p&gt;引自：《CLR VIA C# -21章》&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/library/vstudio/f144e03t(v=vs.100&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;自动内存管理&lt;/a&gt;.aspx)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/library/vstudio/ee787088(v=vs.100&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;垃圾回收的基础&lt;/a&gt;.aspx)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/library/vstudio/ee787088(v=vs.100&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;代数&lt;/a&gt;.aspx#generations )&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;###托管堆基础&lt;br&gt; 简述：每个程序都要使用这样或那样的资源，包括文件、内存缓冲区、屏幕空间、网络连接…..事实上，在面向对象的环境中，每个类型都代表可供程序使用的一种资源。要使用这些资源，必须为代表资源的类型分配内存。&lt;/p&gt;
&lt;p&gt; 以下是访问一个资源所需步骤：&lt;/
    
    </summary>
    
      <category term="GC" scheme="http://codelover.link/categories/GC/"/>
    
    
  </entry>
  
  <entry>
    <title>C#.NET托管堆和垃圾回收(续)</title>
    <link href="http://codelover.link/2016/03/01/%E6%89%98%E7%AE%A1%E5%A0%86%E5%92%8C%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6(%E7%BB%AD)/"/>
    <id>http://codelover.link/2016/03/01/托管堆和垃圾回收(续)/</id>
    <published>2016-03-01T12:49:34.588Z</published>
    <updated>2016-02-23T15:29:23.104Z</updated>
    
    <content type="html">&lt;p&gt;##大对象&lt;br&gt; CLR将对象分成大对象和小对象。目前认为85000字节或者更大的对象是大对象。CLR以不同方式对待大小对象。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;大对象不是在小对象的地址空间分配的，而是在进程地址空间的其他地方分配。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;目前版本的GC不“压缩”大对象，因为在内存中移动它们代价过高。但这可能在进程中的大对象之间造成地址空间碎片化，以至于抛出OutMemoryException。CLR将来的版本可能会压缩大对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;大对象总是第2代，绝不可能是第0代或者第1代。所以只能为需要长时间存活的资源创建大对象。分配短时间存活的大对象会导致第2代被更频繁地回收，损失性能。大对象一般是大字符串（XML/JSON）或者用于I/O操作的字节数组（从文件/网络将字节读入缓冲区以便处理）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;##垃圾回收模式&lt;br&gt; CLR启动时会选择一个GC模式，进程中之前该模式都不会改变。&lt;/p&gt;
&lt;p&gt; 有两个基本GC模式。&lt;/p&gt;
&lt;p&gt;###工作站&lt;br&gt;该模式针对客户端应用程序优化GC。GC造成的延时很低，应用程序线程挂起时间很短，避免用户感到焦虑。在该模式中,GC假定机器上运行的其他应用程序都不会消耗太多的CPU资源。&lt;/p&gt;
&lt;p&gt;###服务器&lt;br&gt; 该模式针对服务器端应用程序优化GC。被优化的主要是吞吐量和资源利用。GC假定机器上没有运行其他应用程序（无论客户端还是服务器应用程序），并假定机器的所有CPU都可以用来辅助完成GC。该模式造成托管堆被拆分成几个区域，每个CPU一个。开始垃圾回收时，垃圾回收器在每个CPU上运行一个特殊线程；每个线程都和其他线程并发回收它自己的区域。对于工作者线程行为一致的服务器应用程序，并发回收能很好进行。这个功能要求应用程序在多CPU计算机上运行，是线程能真正同时工作，从而得到性能上的提升。&lt;/p&gt;
&lt;p&gt;应用程序默认以“工作站”GC模式运行。寄宿了CLR的服务器应用程序（如ASP.NET ）可请求CLR加载服务器 GC.但如果应用程序在单处理器计算机上运行，CLR总是使用“工作站”GC模式。&lt;/p&gt;
&lt;p&gt;独立应用程序可以创建一个配置文件告诉CLR 使用CLR使用服务器回收器。配置文件要为应用程序添加gcServer元素。下面是一个示例配置文件：&lt;/p&gt;
&lt;p&gt;&lt;configuration&gt;&lt;br&gt;       &lt;runtime&gt;&lt;br&gt;             &lt;gcserver enabled=&quot;true&quot;&gt;&lt;br&gt;      &lt;/gcserver&gt;&lt;/runtime&gt;&lt;br&gt;&lt;/configuration&gt;&lt;br&gt;可以使用GCSettings类的只读Boolean属性IsServerGC得到CLR是否处于“服务器”GC模式。&lt;/p&gt;
&lt;p&gt;除了这两种模式，GC还支持两种子模式：并发(默认)或者非并发。&lt;br&gt;在并发方式中，垃圾回收器有一个额外的后台线程，它能在应用程序运行时并发标记对象。 程序运行时，垃圾回收器运行一个普通优先级的后台线程来查找不可达对象。找到之后，垃圾回收器再次挂起所以线程，判断是否要“压缩”内存。如决定压缩，内存会被压缩，根引用会被修正，应用程序线程恢复运行。这一次垃圾回收花费的时间比平常少，因为不可达对象集合已构造好了。但垃圾回收器也可能决定不压缩内存；事实上，垃圾回收器更倾向不压缩。可用内存多，垃圾回收器便不会压缩堆；这有利于增强性能，但会增大程序的工作集。使用并发垃圾回收器，应用程序消耗的内存通常比使用非并发垃圾回收器多。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;##大对象&lt;br&gt; CLR将对象分成大对象和小对象。目前认为85000字节或者更大的对象是大对象。CLR以不同方式对待大小对象。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;大对象不是在小对象的地址空间分配的，而是在进程地址空间的其他地方分配。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;目前版
    
    </summary>
    
      <category term="GC" scheme="http://codelover.link/categories/GC/"/>
    
    
  </entry>
  
  <entry>
    <title>一些有用的网站</title>
    <link href="http://codelover.link/2016/03/01/%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99/"/>
    <id>http://codelover.link/2016/03/01/一些有用的网站/</id>
    <published>2016-03-01T12:49:34.588Z</published>
    <updated>2016-02-25T15:11:56.106Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://wowubuntu.com/markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown 语法说明 (简体中文版)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://wowubuntu.com/markdown/basic.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown: Basics （快速入门）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://wsgzao.github.io/post/hexo-guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用GitHub和Hexo搭建免费静态Blog(本博客案例)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mxgw.info/t/filename-too-long-in-git.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;win下面的git客户端提示FIlename too long解决方法&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://wowubuntu.com/markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown 语法说明 (简体中文版)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://wowubuntu.com/ma
    
    </summary>
    
      <category term="nothing" scheme="http://codelover.link/categories/nothing/"/>
    
    
  </entry>
  
  <entry>
    <title>.NET 类字段与类属性</title>
    <link href="http://codelover.link/2016/03/01/%E7%B1%BB%E5%AD%97%E6%AE%B5%E4%B8%8E%E7%B1%BB%E5%B1%9E%E6%80%A7/"/>
    <id>http://codelover.link/2016/03/01/类字段与类属性/</id>
    <published>2016-03-01T12:49:34.588Z</published>
    <updated>2016-02-23T15:58:47.116Z</updated>
    
    <content type="html">&lt;p&gt;#.NET 类字段与类属性&lt;br&gt;@(.NET)[基础|字段|属性]&lt;/p&gt;
&lt;p&gt;##字段&lt;br&gt;字段表示只读或可读/可写的数据值。&lt;br&gt;字段可以是静态的，这种字段被认为是类型状态的一部分。&lt;br&gt;字段也可以是实例（非静态），这种字段被认为是对象状态的一部分。&lt;br&gt;强烈建议把字段声明为私有，防止类型或对象的状态被类型外部代码破坏。&lt;/p&gt;
&lt;p&gt;##属性&lt;br&gt;属性允许用简单的、字段风格的语法设置或查询类型或对象的逻辑状态，同时保证状态不被破坏。&lt;br&gt;作用于类型称为静态属性，作用于对象称为实例属性。&lt;br&gt;属性可以无参，也可以有多个参数（相当少见，但集合类用的多）。 &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;using System;

public sealed class SomeType
{                            //  1  
// Nested class  
   private class SomeNestedType { }                //  2  

   // Constant, read­only, and static read/write field   
   private const Int32 c_SomeConstant = 1;            //  3     

   private readonly String m_SomeReadOnlyField = &amp;quot;2&amp;quot;;     //  4    

   private static Int32 s_SomeReadWriteField = 3;      //  5  

   // Type constructor  
   static SomeType() { }                                  //  6  

   // Instance constructors  
   public SomeType(Int32 x) { }                           //  7  

   public SomeType() { }                                  //  8 

   // Instance and static methods  
   private String InstanceMethod() { return null; }       // 9   

   public static void Main() { }                        // 10 

   // Instance property  
   public Int32 SomeProp
   {                                // 11      
       get { return 0; }                                // 12      
       set { }                                          // 13  
   }

   // Instance parameterful property (indexer) 
   public Int32 this[String s]
   {                          // 14       
       get { return 0; }                                // 15        
       set { }                                          // 16  
   }

   // Instance event  
   public event EventHandler SomeEvent;                  // 17  
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;https://kekaeq-ch3301.files.1drv.com/y3meEWWaK-o9SNfr_fT71Xr3YrPqO1LIswWqMvlHyUxWeH8P0PtXsQlfRkDnGshlMJIy2gPsxNet14efOPOuX-dHmZhCTg8PXyELJR9tnayye4LeEQ6F997b8pSI84wBR6nmmOF8IAr92oKWk36-f8alkEj9TrDQbiMoKGQwO5MTFY/20150105.jpg?psid=1&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://kekaeq-ch3301.files.1drv.com/y3mN8FseIEbAaQfT8ynEIc4nYsOUK0p0IN7Hp39imVSZXNQXlSfAYmvaC-9bDM3Hq6rPCV1XgrgvoST8wXejwARXaDmXptZpb_nyWwUzWK1rzaJ6fSsYfnP0icRKUclaVxnlltOJSQiuTFO7_fCfabmv0AsrgL5sLo6GdVJmpd-L10/QQ%E5%9B%BE%E7%89%8720151003165909.jpg?psid=1&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;#.NET 类字段与类属性&lt;br&gt;@(.NET)[基础|字段|属性]&lt;/p&gt;
&lt;p&gt;##字段&lt;br&gt;字段表示只读或可读/可写的数据值。&lt;br&gt;字段可以是静态的，这种字段被认为是类型状态的一部分。&lt;br&gt;字段也可以是实例（非静态），这种字段被认为是对象状态的一部分。&lt;br&gt;强
    
    </summary>
    
      <category term=".net" scheme="http://codelover.link/categories/net/"/>
    
    
  </entry>
  
  <entry>
    <title>CodeSmith 连接MySQL数据库报“can&#39;t find .net framework data provider”</title>
    <link href="http://codelover.link/2016/03/01/CodeSmith%E8%BF%9E%E6%8E%A5MySQL%E6%8A%A5%E9%94%99%E2%80%9C%E6%89%BE%E4%B8%8D%E5%88%B0%E8%AF%B7%E6%B1%82%E7%9A%84%20.Net%20Framework%20Data%20Provider%E3%80%82%E5%8F%AF%E8%83%BD%E6%B2%A1%E6%9C%89%E5%AE%89%E8%A3%85%E3%80%82%E2%80%9D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://codelover.link/2016/03/01/CodeSmith连接MySQL报错“找不到请求的 .Net Framework Data Provider。可能没有安装。”解决方法/</id>
    <published>2016-03-01T12:49:34.572Z</published>
    <updated>2016-02-27T09:41:40.501Z</updated>
    
    <content type="html">&lt;p&gt;1、下载 mysql-connector-net 安装&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.mysql.com/downloads/connector/net/6.9.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mysql-connector-net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、mysql-connector-net 安装完毕之后，到对应的安装目录下，把对应的MySQL .NET dll拷贝到 CodeSmith的bin目录和SchemaProviders目录。&lt;/p&gt;
&lt;p&gt;一般DLL所在目录是：&lt;/p&gt;
&lt;p&gt;C:\Program Files (x86)\MySQL\MySQL Connector Net 6.9.8\Assemblies\v4.0&lt;/p&gt;
&lt;p&gt;3、重启CodeSmith生效&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;其余解决方案：&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/joke01/article/details/9469515&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;codesmith无法连接Mysql的解决方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/tim190/archive/2013/01/18/2866161.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;codesmith6.5连接Mysql提示“找不到请求的 .Net Framework Data Provider。可能没有安装。”解决方法&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1、下载 mysql-connector-net 安装&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.mysql.com/downloads/connector/net/6.9.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mysql-
    
    </summary>
    
      <category term="CodeSmith" scheme="http://codelover.link/categories/CodeSmith/"/>
    
    
  </entry>
  
  <entry>
    <title>CodeSmith for MySQL template</title>
    <link href="http://codelover.link/2016/03/01/CodeSmith%20to%20MySQL/"/>
    <id>http://codelover.link/2016/03/01/CodeSmith to MySQL/</id>
    <published>2016-03-01T12:49:34.572Z</published>
    <updated>2016-02-27T16:32:58.683Z</updated>
    
    <content type="html">&lt;p&gt;对于.NET平台上的代码生成器来说，codesmith是一个非常好的选择。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;以前在学院实验室用的都是SQL server数据库，老师给的一套codesmith模板用来生成model/DAL/BLL很是方便。&lt;br&gt;&lt;br&gt;&lt;br&gt;不过后来放弃SQL server 投入MySQL之后，刚开始都是手写SQL，还是很痛苦的。&lt;br&gt;&lt;br&gt;&lt;br&gt;再后来又去找MySQL codesmith模板,这个对应的资料就不多了。不过最后还是找到了一套不错的，凑合能用。起初也懒，codesmith语法不熟，就没想过去修改一下了。&lt;br&gt;&lt;br&gt; 最近又要用到这套东西，于是决定还是去修改一番，更便于使用。&lt;/p&gt;
&lt;p&gt;这个文章就主要讲一下修改过程，顺便说一下codesmith的简单语法。&lt;/p&gt;
&lt;p&gt;先说一下操作步骤：&lt;/p&gt;
&lt;p&gt;把模板的文件夹扔到codesmith模板文件的路径下，接着打开Codesmith，找到刚扔过去的文件夹，选择Main.cst,右键-execute-选择对应的MySQL库-选中表。&lt;br&gt;&lt;br&gt;（注：codesmith连接MySQL有问题的话，&lt;br&gt;&lt;br&gt;移步这里解决 &lt;a href=&quot;http://codelover.link/2016/02/25/CodeSmith%E8%BF%9E%E6%8E%A5MySQL%E6%8A%A5%E9%94%99%E2%80%9C%E6%89%BE%E4%B8%8D%E5%88%B0%E8%AF%B7%E6%B1%82%E7%9A%84%20.Net%20Framework%20Data%20Provider%E3%80%82%E5%8F%AF%E8%83%BD%E6%B2%A1%E6%9C%89%E5%AE%89%E8%A3%85%E3%80%82%E2%80%9D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/&quot;&gt;CodeSmith 连接MySQL数据库报“can’t find .net framework data provider”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如下图：&lt;br&gt;&lt;img src=&quot;http://7xrayk.com1.z0.glb.clouddn.com/20160228-1.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后点击Generate就能顺利生成model/dal/bll了。&lt;/p&gt;
&lt;p&gt;生成代码结构如下：&lt;br&gt;&lt;img src=&quot;http://7xrayk.com1.z0.glb.clouddn.com/20160228-2.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;这样操作没什么问题，顺利生成了我们要的model/dal/bll了，然后….我懒嘛。&lt;br&gt;每次都要把表一个个选一次，麻不麻烦啊。然后就想了，能不能改一下模板呢。于是便开始google相关资料了。找到了几个相关文章，参考这就开始改造了。&lt;br&gt;先看看原来的Main.cst里面写了撒。&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ CodeTemplate Language=&lt;span class=&quot;string&quot;&gt;&quot;C#&quot;&lt;/span&gt; ResponseEncoding=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TargetLanguage=&lt;span class=&quot;string&quot;&gt;&quot;Text&quot;&lt;/span&gt; Src=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; Inherits=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; Debug=&lt;span class=&quot;string&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Description=&lt;span class=&quot;string&quot;&gt;&quot;Template description here.&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Output=&lt;span class=&quot;string&quot;&gt;&quot;None&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Register Name=&lt;span class=&quot;string&quot;&gt;&quot;Models&quot;&lt;/span&gt; Template=&lt;span class=&quot;string&quot;&gt;&quot;DBMad.Models.cst&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	MergeProperties=&lt;span class=&quot;string&quot;&gt;&quot;False&quot;&lt;/span&gt; ExcludeProperties=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; %&amp;gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Register Name=&lt;span class=&quot;string&quot;&gt;&quot;DAL&quot;&lt;/span&gt; Template=&lt;span class=&quot;string&quot;&gt;&quot;DBMad.DAL.cst&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MergeProperties=&lt;span class=&quot;string&quot;&gt;&quot;False&quot;&lt;/span&gt; ExcludeProperties=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; %&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Register Name=&lt;span class=&quot;string&quot;&gt;&quot;BLL&quot;&lt;/span&gt; Template=&lt;span class=&quot;string&quot;&gt;&quot;DBMad.BLL.cst&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MergeProperties=&lt;span class=&quot;string&quot;&gt;&quot;False&quot;&lt;/span&gt; ExcludeProperties=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Property Name=&lt;span class=&quot;string&quot;&gt;&quot;SourceTable&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type=&lt;span class=&quot;string&quot;&gt;&quot;SchemaExplorer.TableSchema&quot;&lt;/span&gt; Optional=&lt;span class=&quot;string&quot;&gt;&quot;False&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Property Name=&lt;span class=&quot;string&quot;&gt;&quot;RootNamespace&quot;&lt;/span&gt; Default=&lt;span class=&quot;string&quot;&gt;&quot;Net.Itcast.CN&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type=&lt;span class=&quot;string&quot;&gt;&quot;System.String&quot;&lt;/span&gt; Optional=&lt;span class=&quot;string&quot;&gt;&quot;False&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Assembly Name=&lt;span class=&quot;string&quot;&gt;&quot;SchemaExplorer&quot;&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Assembly Name=&lt;span class=&quot;string&quot;&gt;&quot;System.Data&quot;&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Import Namespace=&lt;span class=&quot;string&quot;&gt;&quot;SchemaExplorer&quot;&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Import Namespace=&lt;span class=&quot;string&quot;&gt;&quot;System.Data&quot;&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script runat=&lt;span class=&quot;string&quot;&gt;&quot;template&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; _outputDirectory = String.Empty;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[Editor(&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt;(System.Windows.Forms.Design.FolderNameEditor), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt;(System.Drawing.Design.UITypeEditor))] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[Description(&lt;span class=&quot;string&quot;&gt;&quot;The directory to output the results to.&quot;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; OutputDirectory &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _outputDirectory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt; != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;.EndsWith(&lt;span class=&quot;string&quot;&gt;&quot;\\&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt; += &lt;span class=&quot;string&quot;&gt;&quot;\\&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			_outputDirectory = &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这一段基本就是在声明选项以及引用命名空间，表现出来的便是我们看到的下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrayk.com1.z0.glb.clouddn.com/20160228-1.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Models model = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.Create&amp;lt;Models&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	model.ModelsNamespace = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.RootNamespace+&lt;span class=&quot;string&quot;&gt;&quot;.Model&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	model.TargetTable = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.SourceTable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	model.RenderToFile(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.OutputDirectory+&lt;span class=&quot;string&quot;&gt;&quot;Model/&quot;&lt;/span&gt;+model.GetFileName(),&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   DAL dal = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.Create&amp;lt;DAL&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   dal.TargetTable = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.SourceTable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   dal.ModelsNamespace = model.ModelsNamespace;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   dal.DALClassNameSurfix = &lt;span class=&quot;string&quot;&gt;&quot;DAL&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   dal.DALNamespace =&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.RootNamespace+&lt;span class=&quot;string&quot;&gt;&quot;.DAL&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   dal.RenderToFile(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.OutputDirectory+&lt;span class=&quot;string&quot;&gt;&quot;DAL/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   +dal.GetFileName(),&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   BLL bll = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.Create&amp;lt;BLL&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   bll.ModelsNamespace = model.ModelsNamespace;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   bll.DALClassNameSurfix = dal.DALClassNameSurfix;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   bll.DALNamespace = dal.DALNamespace;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   bll.BLLClassNameSurfix = &lt;span class=&quot;string&quot;&gt;&quot;BLL&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   bll.BLLNamespace = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.RootNamespace+&lt;span class=&quot;string&quot;&gt;&quot;.BLL&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   bll.TargetTable = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.SourceTable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   bll.RenderToFile(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.OutputDirectory+&lt;span class=&quot;string&quot;&gt;&quot;BLL/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   +bll.GetFileName(),&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Response.Write(&lt;span class=&quot;string&quot;&gt;&quot;ok,see &quot;&lt;/span&gt;+&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.OutputDirectory);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这一段就是我们点击Generate之后执行的代码，基本功能就是调用&lt;br&gt;DBMad.Models.cst,DBMad.DAL.cst,DBMad.BLL.cst。&lt;br&gt;因为在上面声明数据源的时候，使用了SchemaExplorer.TableSchema，导致我们选择表的时候不能多选。代码如下：&lt;/p&gt;
&lt;p&gt;&amp;lt;%@ Property Name=”SourceTable” Type=”SchemaExplorer.TableSchema” Optional=”False”%&amp;gt;&lt;/p&gt;
&lt;p&gt;这样一想，这个Main.cst就是一个可以处理单表的生成模板了，我们只要自己写一个可以多选表的模板，然后循环调用这个模板去生成，不就完事了？&lt;/p&gt;
&lt;p&gt;找了一下资料，发现只需要把上面的选项Type改一下，便可以多选表了。&lt;/p&gt;
&lt;p&gt;如下：&lt;/p&gt;
&lt;p&gt;&amp;lt;%@ Property Name=”SourceTables” Type=”SchemaExplorer.TableSchemaCollection” Default=”” Optional=”False” Category=””%&amp;gt; &lt;/p&gt;
&lt;p&gt;整体代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ CodeTemplate Language=&lt;span class=&quot;string&quot;&gt;&quot;C#&quot;&lt;/span&gt; ResponseEncoding=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TargetLanguage=&lt;span class=&quot;string&quot;&gt;&quot;Text&quot;&lt;/span&gt; Src=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; Inherits=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; Debug=&lt;span class=&quot;string&quot;&gt;&quot;False&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Description=&lt;span class=&quot;string&quot;&gt;&quot;Template description here.&quot;&lt;/span&gt; Output=&lt;span class=&quot;string&quot;&gt;&quot;None&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Property Name=&lt;span class=&quot;string&quot;&gt;&quot;SourceTables&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type=&lt;span class=&quot;string&quot;&gt;&quot;SchemaExplorer.TableSchemaCollection&quot;&lt;/span&gt; Default=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Optional=&lt;span class=&quot;string&quot;&gt;&quot;False&quot;&lt;/span&gt; Category=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;%&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Register Name=&lt;span class=&quot;string&quot;&gt;&quot;SE&quot;&lt;/span&gt; Template=&lt;span class=&quot;string&quot;&gt;&quot;CreatSingleTable.cst&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MergeProperties=&lt;span class=&quot;string&quot;&gt;&quot;False&quot;&lt;/span&gt; ExcludeProperties=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; %&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Property Name=&lt;span class=&quot;string&quot;&gt;&quot;RootNamespace&quot;&lt;/span&gt; Default=&lt;span class=&quot;string&quot;&gt;&quot;Net.Itcast.CN&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type=&lt;span class=&quot;string&quot;&gt;&quot;System.String&quot;&lt;/span&gt; Optional=&lt;span class=&quot;string&quot;&gt;&quot;False&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Assembly Name=&lt;span class=&quot;string&quot;&gt;&quot;SchemaExplorer&quot;&lt;/span&gt; %&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Assembly Name=&lt;span class=&quot;string&quot;&gt;&quot;System.Data&quot;&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Import Namespace=&lt;span class=&quot;string&quot;&gt;&quot;SchemaExplorer&quot;&lt;/span&gt; %&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Import Namespace=&lt;span class=&quot;string&quot;&gt;&quot;System.Data&quot;&lt;/span&gt; %&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Import Namespace=&lt;span class=&quot;string&quot;&gt;&quot;System.Collections&quot;&lt;/span&gt; %&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script runat=&lt;span class=&quot;string&quot;&gt;&quot;template&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; _outputDirectory = String.Empty;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[Editor(&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt;(System.Windows.Forms.Design.FolderNameEditor), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt;(System.Drawing.Design.UITypeEditor))] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[Description(&lt;span class=&quot;string&quot;&gt;&quot;The directory to output the results to.&quot;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; OutputDirectory &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _outputDirectory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt; != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;.EndsWith(&lt;span class=&quot;string&quot;&gt;&quot;\\&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt; += &lt;span class=&quot;string&quot;&gt;&quot;\\&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			_outputDirectory = &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;foreach&lt;/span&gt;(TableSchema ts &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; SourceTables) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SE s = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SE(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   s.SourceTable = ts; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   s.RootNamespace = RootNamespace;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   s.OutputDirectory = OutputDirectory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   s.Render(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.Response); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script runat=&lt;span class=&quot;string&quot;&gt;&quot;template&quot;&lt;/span&gt;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;前面一部分还是一样的声明，&lt;/p&gt;
&lt;p&gt;&amp;lt;%@ Property Name=”SourceTables” Type=”SchemaExplorer.TableSchemaCollection” Default=”” Optional=”False” Category=””%&amp;gt; &lt;/p&gt;
&lt;p&gt;这一句把选项类型修改成可多选的（既 集合）。&lt;br&gt;效果如下图：&lt;br&gt;&lt;img src=&quot;http://7xrayk.com1.z0.glb.clouddn.com/20160228-4.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;foreach&lt;/span&gt;(TableSchema ts &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; SourceTables) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SE s = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SE(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   s.SourceTable = ts; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   s.RootNamespace = RootNamespace;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   s.OutputDirectory = OutputDirectory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   s.Render(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.Response); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script runat=&lt;span class=&quot;string&quot;&gt;&quot;template&quot;&lt;/span&gt;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这一段代码便是获取刚得到的表集合，遍历集合然后依次调用之前的单表生成模板。&lt;/p&gt;
&lt;p&gt;到这里差不多已经完成了我要的效果，选择多表，实现一次生成所有的表对应的model/dal/bll。&lt;/p&gt;
&lt;p&gt;这个效果基本就是我要的了，但是后来又发现，model里面的字段居然没有注释，我在建表的时候写了字段注释的呀。&lt;/p&gt;
&lt;p&gt;打开model的cst文件之后发现，模板并没有做注释这个工作。&lt;br&gt;代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ CodeTemplate Language=&quot;C#&quot; TargetLanguage=&quot;C#&quot; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Src=&quot;ToolsCodeTemplate.cs&quot; Inherits=&quot;ToolsCodeTemplate&quot;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Property Name=&quot;TargetTable&quot; Type=&quot;SchemaExplorer.TableSchema&quot; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Category=&quot;Context&quot; Description=&quot;TargetTable that the object is &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;based on.&quot; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Property Name=&quot;ModelsNamespace&quot; Default=&quot;Model&quot; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type=&quot;System.String&quot; Category=&quot;Context&quot; Description=&quot;TargetTable &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;that the object is based on.&quot; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Assembly Name=&quot;SchemaExplorer&quot; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Assembly Name=&quot;System.Data&quot; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Import Namespace=&quot;SchemaExplorer&quot; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ Import Namespace=&quot;System.Data&quot; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% PrintHeader(); %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using System;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using System.Collections.Generic;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using System.Text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;namespace &amp;lt;%= ModelsNamespace %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[Serializable()]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public class &amp;lt;%= GetModelClassName() %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;lt;% &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		foreach (ColumnSchema column in TargetTable.Columns)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			private &amp;lt;%= GetPropertyType(column) %&amp;gt;  _&amp;lt;%= &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			GetPropertyName(column) %&amp;gt;;			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;% &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		foreach (ColumnSchema column in TargetTable.Columns)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			public &amp;lt;%= GetPropertyType(column) %&amp;gt; &amp;lt;%= &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			GetPropertyName(column) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				 get &amp;#123; return _&amp;lt;%= GetPropertyName(column) %&amp;gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	             set &amp;#123; _&amp;lt;%= GetPropertyName(column) %&amp;gt; = value; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		%&amp;gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script runat=&quot;template&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public string GetModelClassName()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return GetModelClassName(TargetTable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public override string GetFileName()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return this.GetModelClassName(this.TargetTable) + &quot;.cs&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;获取表中字段名使用的是GetPropertyName(column)，咦，在哪实现了这个东西呢？回去翻一下文件，哦，还有一个ToolsCodeTemplate.cs文一直没管呢。&lt;/p&gt;
&lt;p&gt;果然，GetPropertyName(column)在这里。&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GetPropertyName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ColumnSchema column&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; GetNameFromDBFieldName(column);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GetNameFromDBFieldName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ColumnSchema column&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; column.Name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;读取列名就是这么简单，那么我们对应写一个函数读取一下列注释，然后再model里面调用一下不好了。&lt;/p&gt;
&lt;p&gt;又查了一下资料，&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GetColumnComment&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ColumnSchema column&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; column.Description;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;嗯，理论上这样是可以的…&lt;br&gt;然而，我想多了。倒腾了好久，这个属性值都是空的…&lt;br&gt;google了一圈之后发现，原来是SchemaExplorer.MySQLSchemaProvider.dll 里面压根没实现读取列注释的实现….&lt;/p&gt;
&lt;p&gt;不过也有对应的解决方法：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/LonelyShadow/p/4147743.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;完美解决CodeSmith无法获取MySQL表及列Description说明注释的方案&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;把DLL替换一下就好了。&lt;/p&gt;
&lt;p&gt;最后附上模板连接:&lt;a href=&quot;https://github.com/liguobao/CodeSmith-for-MySQL-Template&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodeSmith-for-MySQL-Template&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;模板会把MySQL的表名前三个字符截取掉，建议把表明设置为tbl开头，或者自行修改模板文件。&lt;/li&gt;
&lt;li&gt;想让字段注释生效记得替换SchemaExplorer.MySQLSchemaProvider.dll(替换前记得备份！)&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;对于.NET平台上的代码生成器来说，codesmith是一个非常好的选择。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;以前在学院实验室用的都是SQL server数据库，老师给的一套codesmith模板用来生成model/DAL/BLL很是方便。&lt;br&gt;&lt;br&gt;&lt;br&gt;不过后来放弃S
    
    </summary>
    
      <category term="CodeSmith" scheme="http://codelover.link/categories/CodeSmith/"/>
    
    
  </entry>
  
</feed>
